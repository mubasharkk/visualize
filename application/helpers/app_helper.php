<?php

function assets_url($url) {
    return site_url('assets/' . $url);
}

function image_url($url) {
    return assets_url('images/' . $url);
}

function style_url($url) {
    return assets_url('styles/' . $url);
}

function script_url($url) {
    return assets_url('scripts/' . $url);
}

function debug_arr($arr, $die = FALSE) {

    echo "<pre>";
    print_r($arr);
    echo "</pre>";

    if (!$die)
        die();
}

/**
 * @author Mubashar Khokhar
 */

/**
 * urlSafeEncrypt - 2 way encryption for url safe string
 *
 * @param string $PHPprotectV41 UnEncrypted string
 * @return string Encrypted string
 */
function urlSafeEncrypt($PHPprotectV41) {
    return rtrim(strtr(base64_encode(gzdeflate($PHPprotectV41, 9)), '+/', '-_'), '=');
}

/**
 * urlSafeDecrypt - decrypts a url safe encrypted string generated by urlSafeEncrypt
 *
 * @param string $PHPprotectV41 Encrypted string
 * @return string UnEncrypted string
 */
function urlSafeDecrypt($PHPprotectV41) {
    return gzinflate(base64_decode(strtr($PHPprotectV41, '-_', '+/')));
}

/**
 * Indents a flat JSON string to make it more human-readable.
 *
 * @param string $json The original JSON string to process.
 *
 * @return string Indented version of the original JSON string.
 */
function json_indent($arr) {

    $json = json_encode($arr);

    $result = '';
    $pos = 0;
    $strLen = strlen($json);
    $indentStr = '  ';
    $newLine = "\n";
    $prevChar = '';
    $outOfQuotes = true;

    for ($i = 0; $i <= $strLen; $i++) {

        // Grab the next character in the string.
        $char = substr($json, $i, 1);

        // Are we inside a quoted string?
        if ($char == '"' && $prevChar != '\\') {
            $outOfQuotes = !$outOfQuotes;

            // If this character is the end of an element, 
            // output a new line and indent the next line.
        } else if (($char == '}' || $char == ']') && $outOfQuotes) {
            $result .= $newLine;
            $pos--;
            for ($j = 0; $j < $pos; $j++) {
                $result .= $indentStr;
            }
        }

        // Add the character to the result string.
        $result .= $char;

        // If the last character was the beginning of an element, 
        // output a new line and indent the next line.
        if (($char == ',' || $char == '{' || $char == '[') && $outOfQuotes) {
            $result .= $newLine;
            if ($char == '{' || $char == '[') {
                $pos++;
            }

            for ($j = 0; $j < $pos; $j++) {
                $result .= $indentStr;
            }
        }

        $prevChar = $char;
    }

    return $result;
}
